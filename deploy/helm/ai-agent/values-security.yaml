# Security Agent - Helm Values
# Tier 3: Operations (Production with approval)
# Runtime: CronJob (scheduled scans) + Optional Deployment (on-demand API)

agent:
  name: security-agent
  tier: 3
  type: security
  version: "1.0.0"
  frameworkVersion: "2.1.0"

image:
  repository: ghcr.io/your-org/security-agent
  pullPolicy: Always
  tag: "latest"

# Deployment for on-demand API (optional)
replicaCount: 2

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

# Service configuration
service:
  type: ClusterIP
  port: 8080
  metricsPort: 9090

# Resources - Scanning can be resource-intensive
resources:
  requests:
    cpu: 500m
    memory: 1Gi
    ephemeral-storage: 2Gi
  limits:
    cpu: 2
    memory: 4Gi
    ephemeral-storage: 5Gi

# Auto-scaling for API deployment
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Persistence for scan results
persistence:
  enabled: true
  storageClassName: standard
  accessMode: ReadWriteOnce
  size: 10Gi
  mountPath: /var/scan-results

# CronJob for scheduled scans (PRIMARY RUNTIME)
cronjob:
  enabled: true
  schedule: "0 2 * * *"  # 2 AM daily
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  backoffLimit: 2
  activeDeadlineSeconds: 3600  # 1 hour timeout

# Agent-specific configuration
config:
  agentConfig: |
    agent:
      name: security-agent
      tier: 3
      version: "1.0.0"
      framework_version: "2.1.0"
      description: "Security vulnerability scanning and compliance checking"

    scanning:
      schedule: "0 2 * * *"
      tools:
        - trivy
        - grype
        - checkov
        - kube-bench
      targets:
        - kubernetes-cluster
        - container-images
        - infrastructure-as-code
        - secrets-scanning

    compliance:
      frameworks:
        - CIS-Kubernetes-v1.8
        - PCI-DSS-v4.0
        - SOC2-Type2
        - NIST-800-53
      severity_threshold: MEDIUM
      fail_on_critical: true

    reporting:
      format: json
      destinations:
        - s3://ai-governance-reports/security/
        - slack-webhook
      retention_days: 2555  # 7 years

    observability:
      metrics:
        enabled: true
        port: 9090
      traces:
        enabled: true
        endpoint: http://jaeger-collector.ai-agents-monitoring:14268/api/traces
      logs:
        level: info
        format: json

# Environment variables
env:
  - name: AGENT_NAME
    value: security-agent
  - name: AGENT_TIER
    value: "3"
  - name: FRAMEWORK_VERSION
    value: "2.1.0"
  - name: ENVIRONMENT
    value: production
  - name: SCAN_MODE
    value: scheduled

# Secrets (managed by External Secrets Operator)
secrets:
  create: false
  externalSecrets:
    enabled: true
    backend: aws-secrets-manager
    secretStoreRef: aws-secret-store
    dataFrom:
      - extract:
          key: ai-agents/prod/security-agent

# Governance
governance:
  budgetMonthly: 150
  costCenter: security
  approvers: security-team,compliance-team
  tier: 3

# Monitoring
monitoring:
  enabled: true
  prometheusRule:
    enabled: true
    rules:
      - alert: HighCriticalVulnerabilities
        expr: security_critical_vulns > 5
        for: 5m
        annotations:
          summary: "Critical vulnerabilities found"
      - alert: ScanFailure
        expr: rate(security_scan_errors[5m]) > 0.1
        for: 5m
        annotations:
          summary: "Security scan failure rate high"
  serviceMonitor:
    enabled: true
    interval: 30s

# Network Policy
networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  egress:
    # Allow external API calls (GitHub, Trivy, security tools)
    - to:
      - namespaceSelector: {}
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80
